<!--  
    build.xml
     
    Jan 10 2024       Initial
    Jan 11 2024       Serious things now. SSH auth does not work
    Jan 18 2024       Separate VSCODE folder

-->
<project name="bomerle" default="help" basedir=".">
<property file="build.properties"/>
<property file="build.local.properties"/>
    <!-- D E F A U L T   H E L P -->
    <target name="help" description="What's in this build file">
        <echo message="-----> Available targets "/>
        <echo message=""/>
        <echo message="L O C A L"/>
        <echo message=""/>
        <echo message="-----> .......... localbashrc: Push local .bashrc"/>
        <echo message="-----> .......... restore-prod-images : restore images in local symfony "/>
        <echo message="-----> .......... restore-dev-images : restore images in local symfony "/>
        <echo message=""/>
        <echo message="J A S M I N "/>
        <echo message=""/>
        <echo message="-----> .......... get-jasmin-dev-images : get images from jasmin DEV "/>
        <echo message="-----> .......... get-jasmin-dev-db : get a DB backup from jasmin DEV "/>
        <echo message="-----> .......... get-jasmin-prod-images : get images from jasmin PROD "/>
        <echo message="-----> .......... get-jasmin-prod-db : get a DB backup from jasmin PROD "/>
        <echo message="-----> .......... put-jasmin-procs : push shell procs on jasmin"/>
        <echo message="----->"/>
        <echo message="-----> .......... sshjasmin : test ssh jasmin"/>
        <echo message="-----> .......... cleanup : Shoot all previous local build files"/>
        <echo message="-----> .......... servercleanup : Shoot all previous build files on server"/>
        <echo message=""/>
    </target>
    <!--  =====================================================================================  -->
    <!--  LOCAL AND REMOTE TASKS  -->
    <!--  =====================================================================================  -->
    <!-- COPY .bashrc LOCALLY AND PERFORM CR/LF TRANSFORMATION  -->
    <target name="localbashrc">
        <echo/>
        <echo message="Update local .bashrc"/>
        <echo/>
        <copy todir="${home.dir}" verbose="${copy.verbosemode}">
            <fileset dir="${src.dir}" casesensitive="true">
                <include name="local/.bashrc"/>
            </fileset>
        </copy>
        <fixcrlf srcdir="${home.dir}" includes="**/.bashrc" eol="lf" eof="remove"/>
    </target>
    <!-- COPY SHELL PROCS ON JASMIN  -->
    <target name="put-procs" depends="cleanup">
        <echo/>
        <echo message="Update jasmin procs"/>
        <echo/>
        <copy todir="${build.dir}" verbose="${copy.verbosemode}">
            <fileset dir="${src.dir}/servers/jasmin" casesensitive="true">
                <include name="**.*"/>
            </fileset>
        </copy>
        <fixcrlf srcdir="${build.dir}" includes="**/*" eol="lf" eof="remove"/>
        <scp todir="${jasminuser}:${jasminpass}@${jasminserver}:${jasmin.procdir}" trust="true">
            <fileset dir="${build.dir}">
                <include name="**/*.sh"/>
                <include name="**/*.list"/>
                <include name="**/.bashrc"/>
            </fileset>
        </scp>
        <sshexec    host="${jasminserver}"
                    username="${jasminuser}" 
                    password="${jasminpass}"
                    trust="true"
                    verbose="false"
                    command="chmod +x ${jasmin.procdir}/*.sh;cp ${jasmin.procdir}/.bashrc $HOME" />
    </target>
    <!-- BACKUP & GET DEV IMAGES FROM JASMIN  -->
    <target name="get-jasmin-dev-images" depends="cleanup">
        <echo/>
        <echo message="Zip site images"/>
        <echo/>
        <antcall target="servercleanup">
            <param name="targetenv" value="DEV"/>
        </antcall>
        <sshexec    command="${jasmin.procdir}/save-dev-images.sh;ls -l ${jasmin.workdir};du -kh ${jasmin.workdir};df -kh" 
                    host="${jasminserver}"
                    username="${jasminuser}" 
                    password="${jasminpass}"                    
                    trust="true" 
                    verbose="${verbosemode}"/>
        <antcall target="getzip">
            <param name="targetenv" value="DEV"/>
        </antcall>
    </target>
    <!-- BACKUP & GET PROD IMAGES FROM JASMIN  -->
    <target name="get-jasmin-prod-images" depends="cleanup">
        <echo/>
        <echo message="Zip site images"/>
        <echo/>
        <antcall target="servercleanup">
            <param name="targetenv" value="PROD"/>
        </antcall>
        <sshexec    command="${jasmin.procdir}/save-prod-images.sh;ls -l ${jasmin.workdir};du -kh ${jasmin.workdir};df -kh" 
                    host="${jasminserver}"
                    username="${jasminuser}" 
                    password="${jasminpass}"                    
                    trust="true" 
                    verbose="${verbosemode}"/>
        <antcall target="getzip">
            <param name="targetenv" value="PROD"/>
        </antcall>
    </target>
    <!-- RESTORE IMAGES ARCHIVES TO THE PROD ENVIRONMENT  -->
    <target name="restore-images-toprod">
        <echo/>
        <echo message="Restore images archives to PROD"/>
        <echo/>
        <sshexec    command="unzip -o ${jasmin.backupdir}/some-jpg-jpeg.zip -d ${jasmin.prodpublic}" 
                    host="${jasminserver}"
                    username="${jasminuser}" 
                    password="${jasminpass}"                    
                    trust="true" 
                    verbose="${zip.verbosemode}"/>
        <sshexec    command="unzip -o ${jasmin.backupdir}/webp-gif-svg.zip -d ${jasmin.prodpublic}" 
                    host="${jasminserver}"
                    username="${jasminuser}" 
                    password="${jasminpass}"                    
                    trust="true" 
                    verbose="${zip.verbosemode}"/>
    </target>
    <!-- BACKUP & GET DEV DB FROM JASMIN  -->
    <target name="get-dev-db" depends="cleanup">
        <echo/>
        <echo message="get a DB backup from jasmin dev"/>
        <echo/>
        <sshexec    host="${jasminserver}"
                    username="${jasminuser}" 
                    password="${jasminpass}"                    
                    command="mysqldump -u ${bomerle.dbuser} --password=${bomerle.dbpass} ${bomerle.db} --result-file=${jasmin.backupdir}/toba3789_DEVbomerle.sql"
                    trust="true" 
                    verbose="${verbosemode}"/>
        <scp file="${jasminuser}:${jasminpass}@${jasminserver}:${jasmin.backupdir}/toba3789_DEVbomerle.sql" 
                    trust="true" todir="${save.dir}"/>
    </target>
    <!-- BACKUP & GET PROD DB FROM JASMIN  -->
    <target name="get-jasmin-prod-db" depends="cleanup">
        <echo/>
        <echo message="get a DB backup from jasmin prod"/>
        <echo/>
        <sshexec    host="${jasminserver}"
                    username="${jasminuser}" 
                    password="${jasminpass}"                    
                    command="mysqldump -u ${bomerle.dbuser} --password=${bomerle.dbpass} ${bomerleprod.db} --result-file=${jasmin.workdir}/toba3789_PRODbomerle.sql"
                    trust="true" 
                    verbose="${verbosemode}"/>
        <scp file="${jasminuser}:${jasminpass}@${jasminserver}:${jasmin.workdir}/toba3789_PRODbomerle.sql" 
                    trust="true" todir="${save.dir}"/>
    </target>
    <!-- RESTORE ZIPPED DEV IMAGES ON LOCAL WEB APP  -->
    <target name="restore-dev-images" depends="cleanup">
        <echo/>
        <echo message="Restore site images from ${save.dir}"/>
        <unzip src="${save.dir}/DEV-webp-gif-svg.zip" dest="${bomerlepublic.dir}" />
        <unzip src="${save.dir}/DEV-some-jpg-jpeg.zip" dest="${bomerlepublic.dir}" />
        <echo/>
    </target>
    <!-- RESTORE ZIPPED PROD IMAGES ON LOCAL WEB APP  -->
    <target name="restore-prod-images" depends="cleanup">
        <echo/>
        <echo message="Restore site images from ${save.dir}"/>
        <unzip src="${save.dir}/PROD-webp-gif-svg.zip" dest="${bomerlepublic.dir}" />
        <unzip src="${save.dir}/PROD-some-jpg-jpeg.zip" dest="${bomerlepublic.dir}" />
        <echo/>
    </target>
    <!-- ZIP FILES TRANSFER  -->
    <target name="getzip">
        <echo/>
        <echo message="Get the zip files locally for ${targetenv} environment"/>
        <echo/>
        <scp file="${jasminuser}:${jasminpass}@${jasminserver}:${jasmin.workdir}/${targetenv}-webp-gif-svg.zip" 
                    trust="true" todir="${save.dir}"/>
        <scp file="${jasminuser}:${jasminpass}@${jasminserver}:${jasmin.workdir}/${targetenv}-some-jpg-jpeg.zip" 
                    trust="true" todir="${save.dir}"/>
    </target>
    <!-- CHECK SSH CONNECTIVITY ON JASMIN  -->
    <target name="sshjasmin">
        <echo message="-----> Check ssh connectivity: ${jasminuser}@${jasminserver}"/>
        <echo/>
        <echo/>
        <sshexec    host="${jasminserver}"
                    username="${jasminuser}" 
                    password="${jasminpass}"
                    trust="true"
                    verbose="false"
                    command="ls -al" />
    </target>
    <!--  =====================================================================================  -->
    <!--  GENERIC TASKS  -->
    <!--  =====================================================================================  -->
    <!-- CLEANUP THE BUILD FOLDER  -->
    <target name="cleanup" depends="dir.check" if="dir.exists">
        <echo message="-----> Clean the build environment : ${build.dir}"/>
        <delete verbose="${delete.verbosemode}" includeemptydirs="true">
            <fileset dir="${build.dir}" includes="**/*"/>
        </delete>
    </target>
    <!-- CHECK EXISTENCE OF A DIRECTORY  -->
    <target name="dir.check">
        <condition property="dir.exists">
            <available file="${build.dir}" type="dir"/>
        </condition>
    </target>
    <!-- PERFORM SOME TARGET SERVER CLEANUP ON THE REMOTE WORKING DIRECTORY   -->
    <target name="servercleanup">
        <echo message="-----> Remote target working directory cleanup"/>
        <sshexec    command="rm -rfv ${jasmin.workdir}/${targetenv}*.zip" 
                    host="${jasminserver}"
                    username="${jasminuser}" 
                    password="${jasminpass}"                    
                    trust="true" 
                    verbose="${verbosemode}"/>
    </target>

    <!-- R E S E R V O I R  C O D E
        <sshexec host="$[jasminserver}"
                        username=${jasminuser}" 
                        keyfile=".ssh/id_dad" 
                        trust="true" 
                        sshConfig=".ssh/config"
                        knownhosts=".ssh/known_hostss" 
                        verbose="true"
                        command="ls -al" />
    -->    
</project>